{"version":3,"sources":["components/Search.js","components/Sort.js","components/Control.js","components/TaskItem.js","components/TaskList.js","components/TaskForm.js","App.js","serviceWorker.js","index.js"],"names":["Search","props","state","keyword","onChange","bind","onSearch","event","target","name","value","this","setState","className","type","placeholder","onClick","id","Component","Sort","sortBy","sortValue","onSort","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","Control","TaskList","submit","confirmAlert","title","message","buttons","label","onDelete","onChangeStatus","onUpdate","task","index","scope","status","onDoubleClick","filterName","filterStatus","onFilter","elmTask","tasks","map","TaskItem","key","TaskForm","closeForm","onSubmit","onClear","taskEditting","nextProps","onCloseForm","preventDefault","aria-label","aria-hidden","App","isDislayForm","filter","onDislayForm","findIndex","localStorage","getItem","JSON","parse","data","uuidv4","push","setItem","stringify","splice","onShowForm","result","forEach","parseInt","toLowerCase","indexOf","sort","a","b","elmTaskForm","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.2179b8cc.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\n\r\n\r\nclass Search extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n        keyword : ''\r\n    }\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSearch = this.onSearch.bind(this);\r\n  }\r\n  onChange(event){\r\n      let target = event.target;\r\n      let name   = target.name;\r\n      let value  = target.value;\r\n\r\n      this.setState({\r\n          [name] : value\r\n      });\r\n  }\r\n  onSearch(){\r\n      this.props.onSearch(this.state.keyword);\r\n  }\r\n\r\n  render(){\r\n    return (\r\n        <div className=\"col-8\">\r\n        <div className=\"input-group mb-3\">\r\n          <input value={this.state.keyword} onChange={this.onChange} name=\r\n          \"keyword\" type=\"text\" className=\"form-control\" placeholder=\"Nhập từ khóa...\" />\r\n          <div className=\"input-group-append\">\r\n            <button onClick={this.onSearch} className=\"btn btn-info\" type=\"button\" id=\"button-addon2\"><i className=\"icofont-search-1\"></i></button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React, { Component } from 'react';\r\nimport { sortBy } from 'lodash';\r\n\r\n\r\nclass Sort extends Component {\r\n  constructor(props){\r\n    super(props);\r\n   \r\n  }\r\n\r\n \r\n  onClick = (sortBy,sortValue) =>{\r\n    this.props.onSort(sortBy,sortValue);\r\n  }\r\n\r\n  render(){\r\n    let {sortBy,sortValue} = this.props;\r\n    return (\r\n        <div className=\"col-4\">\r\n            <div className=\"dropdown\">\r\n                <button className=\"btn btn-info dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                <i className=\"icofont-chart-histogram-alt\"></i>  Sắp xếp\r\n                </button>\r\n                <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                    <a onClick={()=>this.onClick('name',1)} type=\"button\" \r\n                        className={(sortBy==='name'&&sortValue===1)?'dropdown-item sort-selected':'dropdown-item'}>\r\n                      Từ A-&gt;Z\r\n                    </a>\r\n                    <a  onClick={()=>this.onClick('name',-1)} type=\"button\" \r\n                        className={(sortBy==='name'&&sortValue===-1)?'dropdown-item sort-selected':'dropdown-item'}> \r\n                       Từ Z-&gt;A\r\n                    </a>\r\n                    <a  onClick={()=>this.onClick('status',1)}type=\"button\" \r\n                       className={(sortBy==='status'&&sortValue===1)?'dropdown-item sort-selected':'dropdown-item'} >\r\n                      Trạng thái Kích hoạt\r\n                    </a>\r\n                    <a  onClick={()=>this.onClick('status',-1)} type=\"button\" \r\n                         className={(sortBy==='status'&&sortValue===-1)?'dropdown-item sort-selected':'dropdown-item'}>\r\n                      Trạng thái Ẩn\r\n                    </a>\r\n                </div>\r\n            </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sort;\r\n","import React, { Component } from 'react';\r\n\r\n\r\nimport Search from './Search';\r\nimport Sort from './Sort';\r\n\r\nclass Control extends Component {\r\n  constructor(props){\r\n    super(props);\r\n  }\r\n\r\n  render(){\r\n    return (\r\n        <div>\r\n            <div className=\"row mt-3\">\r\n                <Search \r\n                  onSearch={this.props.onSearch}\r\n                 \r\n                />\r\n                {/* end Search */}\r\n                    \r\n                <Sort \r\n                    onSort  ={this.props.onSort}\r\n                    sortBy  ={this.props.sortBy} \r\n                    sortValue  ={this.props.sortValue} \r\n                />\r\n                    {/* end Sort */}  \r\n            </div>\r\n            {/* end row */}\r\n        </div>\r\n        \r\n         \r\n    );\r\n  }\r\n}\r\n\r\nexport default Control;\r\n","import React, { Component } from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\n\r\nclass TaskList extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.onChangeStatus = this.onChangeStatus.bind(this);\r\n        this.onDelete = this.onDelete.bind(this);\r\n        this.onUpdate = this.onUpdate.bind(this);\r\n      }\r\n\r\n    onChangeStatus(){\r\n        this.props.onChangeStatus(this.props.task.id)\r\n    }\r\n    onDelete(){\r\n        this.props.onDelete(this.props.task.id)\r\n    }\r\n    onUpdate(){\r\n        this.props.onUpdate(this.props.task.id)\r\n    }\r\n    \r\n    submit = () => {\r\n        confirmAlert({\r\n          title: 'XÁC NHẬN !!!',\r\n          message: 'Bạn có chắn chắn muốn xóa?',\r\n          buttons: [\r\n            {\r\n              label: 'Có',\r\n              onClick: this.onDelete \r\n            },\r\n            {\r\n              label: 'Không',\r\n            }\r\n          ]\r\n        });\r\n      };\r\n    \r\n    render(){\r\n    \r\n        let {task,index}= this.props;\r\n\r\n    return (\r\n        \r\n        <tr>\r\n            <th scope=\"row\">{index + 1}</th>\r\n            <td>{task.name}</td>\r\n            <td>\r\n            <span \r\n                className= {task.status===true?'badge badge-success badge-focus':'badge badge-danger badge-focus'}\r\n                onDoubleClick = {this.onChangeStatus}\r\n            >\r\n               {task.status===true?'Kích hoạt':'Ẩn'}\r\n            </span>\r\n            </td>\r\n            <td>\r\n            <button onClick={this.onUpdate} type=\"button\" className=\"btn btn-dark btn-sm mr-1\"><i className=\"icofont-ui-edit \"></i></button>\r\n            <button onClick={this.submit} type=\"button\" className=\"btn btn-outline-dark btn-sm\" ><i className=\"icofont-ui-delete\"></i></button>\r\n     \r\n        \r\n            </td>\r\n        </tr>\r\n                    \r\n    );\r\n  }\r\n};\r\n\r\nexport default TaskList;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\n\r\nimport TaskItem from './TaskItem';\r\n\r\nclass TaskList extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            filterName : '',\r\n            filterStatus: -1 \r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n    }\r\n\r\n    onChange(event){\r\n        let target = event.target;\r\n        let name = target.name;\r\n        let value = target.value;\r\n     \r\n\r\n        this.setState({\r\n            [name] : value\r\n        });\r\n        this.props.onFilter(\r\n            name === \"filterName\" ? value : this.state.filterName,\r\n            name === \"filterStatus\" ? value : this.state.filterStatus\r\n        )\r\n\r\n        // console.log(this.state)\r\n\r\n    }\r\n    \r\n  render(){\r\n    let {tasks}= this.props;\r\n    let elmTask = tasks.map((task,index)=>{\r\n        return  < TaskItem \r\n                    key={task.id}\r\n                    index = {index}\r\n                    task = {task}\r\n                    onChangeStatus={this.props.onChangeStatus}\r\n                    onDelete={this.props.onDelete}\r\n                    onUpdate={this.props.onUpdate}\r\n                    \r\n                />\r\n    })\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-12\">\r\n                <div className=\"row ml-1\">\r\n                    <table className=\"table table-hover table-striped text-center\">\r\n                        <thead className=\"thead-dark\">\r\n                        <tr>\r\n                            <th className=\"w-10\" scope=\"col\">STT</th>\r\n                            <th className=\"w-45\" scope=\"col\">Tên</th>\r\n                            <th className=\"w-20\" scope=\"col\">Trạng thái</th>\r\n                            <th className=\"w-25\" scope=\"col\">Hành động</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        <tr>\r\n                            <th scope=\"row\" />\r\n                            <td><input value={this.state.filterName} onChange={this.onChange} name=\"filterName\" className=\"form-control\" /></td>\r\n                            <td>\r\n                            <select value={this.state.filterStatus} onChange={this.onChange} name=\"filterStatus\" className=\"form-control\">\r\n                                <option value={-1}>Tất Cả</option>\r\n                                <option value={1}>Kích Hoạt</option>\r\n                                <option value={0}>Ẩn</option>\r\n                            </select>\r\n                            </td>\r\n                            <td />\r\n                        </tr>\r\n                           {elmTask}\r\n                       \r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default TaskList;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\n\r\n\r\nclass TaskForm extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            id   :'',\r\n            name : '',\r\n            status: false,\r\n        };\r\n        \r\n        this.closeForm = this.closeForm.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onClear = this.onClear.bind(this);\r\n      }\r\n      UNSAFE_componentWillMount(){\r\n        let {taskEditting} = this.props;\r\n          if(taskEditting){\r\n              this.setState({\r\n                  id : taskEditting.id,\r\n                  name  : taskEditting.name,\r\n                  status : taskEditting.status\r\n              })\r\n          }\r\n      }\r\n      componentWillReceiveProps(nextProps){\r\n        let {taskEditting} = this.props;\r\n          if(nextProps && nextProps.taskEditting){  \r\n              this.setState({\r\n                id : nextProps.taskEditting.id,\r\n                name  : nextProps.taskEditting.name,\r\n                status : nextProps.taskEditting.status\r\n              })\r\n          }else if(!nextProps.taskEditting){\r\n            this.setState({\r\n                id   :'',\r\n                name : '',\r\n                status: false,\r\n              })\r\n          }\r\n      }\r\n      closeForm (){\r\n        this.props.onCloseForm() \r\n      }\r\n      onChange(event){\r\n        let target = event.target;\r\n        let value = target.value;\r\n        let name = target.name;\r\n\r\n        //ep kieu\r\n        if( name === \"status\" ){\r\n             value = target.value === 'true' ? true : false\r\n        };\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n      }\r\n      onSubmit(event){  \r\n        event.preventDefault();\r\n        // this.props.onSubmit(this.state.name,this.state.status==='true'?true:false)\r\n        this.props.onSubmit(this.state);\r\n        this.onClear();\r\n        this.closeForm();\r\n\r\n\r\n      }\r\n      onClear(){\r\n        this.setState({\r\n            name : '',\r\n            status: false,\r\n        })\r\n      }\r\n\r\n\r\n  render(){\r\n    let {id} = this.state;\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card-header bg-warning text-danger\">\r\n                {id===''?'Thêm công việc':'Cập nhật'}\r\n                <button type=\"button\" className=\"close text-right\" aria-label=\"Close\">\r\n                    <span onClick={this.closeForm} aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                    <label>Tên : </label>\r\n                    <input value={this.state.name} onChange={this.onChange} className=\"form-control\" name=\"name\"/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Trạng thái : </label>\r\n                    <select value={this.state.status} onChange={this.onChange} className=\"form-control\" name=\"status\">\r\n                    <option value={true} >Kích Hoạt</option>\r\n                    <option value={false}>Ẩn</option>\r\n                    </select>\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-danger\">Thêm</button>\r\n                <button onClick={this.onClear} type=\"button\" className=\"btn btn-warning\">Hủy bỏ</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default TaskForm;\r\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport Control from './components/Control';\nimport TaskList from './components/TaskList';\nimport TaskForm from './components/TaskForm';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nclass App extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            tasks        :[],\n            isDislayForm : false,\n            taskEditting : null,\n            filter : {\n                name : '',\n                status : -1\n            },\n            keyword : '',\n            sortBy : 'name',\n            sortValue : 1\n             \n        }\n\n        this.onDislayForm = this.onDislayForm.bind(this);\n        this.onCloseForm = this.onCloseForm.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onChangeStatus = this.onChangeStatus.bind(this);\n        this.findIndex = this.findIndex.bind(this);\n        this.onDelete = this.onDelete.bind(this);\n        this.onUpdate = this.onUpdate.bind(this);\n        this.onFilter = this.onFilter.bind(this);\n        this.onSearch = this.onSearch.bind(this);\n        this.onSort = this.onSort.bind(this);\n    }\n    //toggle \n    onDislayForm(){\n        let {taskEditting} = this.state;\n        if(this.state.isDislayForm && taskEditting !== null){\n            this.setState({\n                isDislayForm : true,\n                taskEditting : null\n            })\n        }else{\n            this.setState({\n                isDislayForm : !this.state.isDislayForm,\n                taskEditting : null\n            })\n        }\n       \n    };\n    onCloseForm(){\n        this.setState({\n            isDislayForm : false\n        })\n    };\n    onShowForm(){\n        this.setState({\n            isDislayForm : true\n        })\n    };\n    UNSAFE_componentWillMount(){\n        if(localStorage && localStorage.getItem('tasks')){\n            let tasks = JSON.parse(localStorage.getItem('tasks'));\n            this.setState({\n                tasks : tasks\n            });\n    \n        }\n    \n    };\n    // onGenerateData(){\n    //         let tasks = [\n    //             {\n    //                 id : uuidv4(),\n    //                 name: 'Hoc lap trinh',\n    //                 status : true\n    //             },\n    //             {\n    //                 id : uuidv4(),\n    //                 name: 'Hoc thuat toan',\n    //                 status : false\n    //             },\n    //             {\n    //                 id : uuidv4(),\n    //                 name: 'Rua chen',\n    //                 status : true\n    //             }\n    //         ]\n    //         this.setState({\n    //             tasks : tasks\n    //         });\n    //     localStorage.setItem('tasks',JSON.stringify(tasks));\n    // };\n\n    onSubmit(data){\n       let {tasks} = this.state;\n       if(data.id === ''){\n        data.id = uuidv4();\n        tasks.push(data);\n       }\n       else{\n           //edit\n           let index = this.findIndex(data.id);\n           tasks[index] = data;\n\n       }\n      \n       this.setState({\n           tasks : tasks,\n           taskEditting : null \n       })\n\n       localStorage.setItem('tasks', JSON.stringify(tasks))\n\n        // console.log(this.state)\n    }\n    onChangeStatus(id){\n     \n        let {tasks} = this.state;\n        let index = this.findIndex(id);\n        if(index !== -1){\n            tasks[index].status = !tasks[index].status;\n            this.setState({\n                tasks:tasks\n            })\n            localStorage.setItem('tasks' , JSON.stringify(tasks))\n           \n        }\n        \n    }\n    onDelete(id){\n\n        let {tasks} = this.state;\n        let index = this.findIndex(id);\n        if(index !== -1){\n           tasks.splice(index,1);\n            this.setState({\n                tasks:tasks\n            })\n            localStorage.setItem('tasks' , JSON.stringify(tasks))\n           \n        }\n        this.onCloseForm();\n    }\n    onUpdate(id){\n        let {tasks} = this.state;\n        let index = this.findIndex(id);\n        let taskEditting = tasks[index];\n        if(index !== -1)\n        {\n            this.setState({\n                taskEditting : taskEditting\n            })\n            this. onShowForm();\n            // console.log(taskEditting)\n        }\n\n    }\n    findIndex(id){\n        let {tasks} = this.state;\n        let result = -1;\n\n        tasks.forEach((task,index)=>{\n            if(task.id === id){\n                // console.log(index)\n                return result = index;\n                \n            }\n        })\n        return result;\n    }\n    onFilter(filterName, filterStatus){\n        // console.log(filterName , filterStatus)\n        filterStatus  = parseInt(filterStatus,10);\n        this.setState({\n            filter : {\n                name : filterName.toLowerCase() , \n                status : filterStatus\n            }\n        })\n    }\n\n    onSearch(keyword){\n        this.setState({\n            keyword : keyword\n        })\n    }\n    onSort(sortBy , sortValue){\n        this.setState({\n            sortBy : sortBy,\n            sortValue :sortValue\n        })\n    }\n\n    render(){\n    \n        let {tasks , \n            isDislayForm, \n            taskEditting, \n            filter, \n            keyword,\n            sortBy,\n            sortValue\n            } = this.state;\n        \n        if(filter){\n            if(filter.name){\n                tasks = tasks.filter((task)=>{\n                    return task.name.toLowerCase().indexOf(filter.name) !== -1 ;\n                })\n            }\n            tasks = tasks.filter((task)=>{\n                if(filter.status === -1 ){\n                    return task;\n                }\n                else {\n                    return task.status === (filter.status === 1 ? true : false);\n                }\n            })\n        }\n        if(keyword){\n            tasks = tasks.filter((task)=>{\n                return task.name.toLowerCase().indexOf(keyword) !== -1 ;\n            })\n        }\n        // sort ----------\n        if(sortBy === 'name'){\n            tasks.sort((a,b)=>{\n                if(a.name.toLowerCase()>b.name.toLowerCase()) return sortValue;\n                else if (a.name.toLowerCase()<b.name.toLowerCase()) return -sortValue;\n                else return 0;\n            })\n        }else{\n            tasks.sort((a,b)=>{\n                if(a.status>b.status) return -sortValue;\n                else if (a.status<b.status) return sortValue;\n                else return 0;\n            })\n        }\n        let  elmTaskForm = isDislayForm \n                    ? <TaskForm \n                            onCloseForm={this.onCloseForm}\n                            onSubmit = {this.onSubmit}\n                            taskEditting = {taskEditting}\n                      /> : '';\n\n    return (\n\n      <div>\n          <div className=\"row\">\n            <div className= {isDislayForm ? 'col-4': ''} >\n              {elmTaskForm}\n              \n            </div>\n            {/* end them cong viec */}\n            <div className= {isDislayForm ? 'col-8': 'col-12'}>\n              <div className=\"row ml-1\">\n                <button onClick={this.onDislayForm} type=\"button\" className={isDislayForm?'btn btn-danger':'btn btn-dark'}>\n                    <i className=\"icofont-ui-add\">&nbsp;</i>\n                    Thêm công việc\n                </button>\n                {/* <button onClick={this.onGenerateData} type=\"button\" className=\"btn btn-danger ml-3\">Generate Data</button> */}\n              </div>\n                < Control\n                    onSearch={this.onSearch}\n                    onSort  ={this.onSort}\n                    sortBy  ={sortBy}\n                    sortValue  ={sortValue}\n                />\n              \n                <TaskList \n                    tasks={tasks} \n                    onChangeStatus={this.onChangeStatus}\n                    onDelete= {this.onDelete}\n                    onUpdate= {this.onUpdate}\n                    onFilter ={this.onFilter}\n                />\n            </div>\n            {/* end right */}\n          </div>\n          {/* end row tong */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}